name: release

on:
  push:
    branches:
      - 'v*'

jobs:
  build:
    name: Build (${{ matrix.target }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: forge
            asset_name: forge-linux-x86_64
            cross: false

          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact_name: forge
            asset_name: forge-linux-aarch64
            cross: true

          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: forge.exe
            asset_name: forge-windows-x86_64.exe
            cross: false

          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: forge
            asset_name: forge-macos-x86_64
            cross: false

          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: forge
            asset_name: forge-macos-arm64
            cross: true

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Install cross-compilation tools
        if: matrix.cross
        run: |
          case ${{ matrix.target }} in
            aarch64-unknown-linux-gnu)
              sudo apt-get update
              sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
              ;;
          esac

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}
          use-cross: ${{ matrix.cross }}

      - name: Generate SHA256
        shell: bash
        run: |
          cd target/${{ matrix.target }}/release
          if [[ "${{ runner.os }}" == "macOS" ]]; then
            shasum -a 256 ${{ matrix.artifact_name }} > ${{ matrix.asset_name }}.sha256
          else
            sha256sum ${{ matrix.artifact_name }} > ${{ matrix.asset_name }}.sha256
          fi

      - name: Upload Binary
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.asset_name }}
          path: |
            target/${{ matrix.target }}/release/${{ matrix.artifact_name }}
            target/${{ matrix.target }}/release/${{ matrix.asset_name }}.sha256

  create_release:
    name: Create Artifacts
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download All Artifacts
        uses: actions/download-artifact@v4

      - name: List Downloaded Artifacts
        run: |
          ls -R

  cleanup:
    name: Cleanup Artifacts
    needs: create_release
    runs-on: ubuntu-latest
    steps:
      - uses: geekyeggo/delete-artifact@v5
        with:
          name: |
            forge-*